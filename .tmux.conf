# setup colors and default shell
set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh

# enable mouse navigation and resize panes
set -g mouse on

# Hack for neovim ESC
set-option -sg escape-time 10

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# remaping C-b to C-a
unbind C-b
set -g prefix C-a

# bind a reload key
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# new window in workspace
bind c new-window -c "$HOME/workspace"

# perform bind C-l to `clear` the scree
bind C-l send-keys 'C-l'

# split panes using | and -
bind / split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# VIM mode
# Use vim keybindings in copy mode
setw -g mode-keys vi

# invoke reattach-to-user-namespace every time a new window/pane opens
# dont forget: brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l zsh"

# start selecting text typing 'v' key (once you are in copy mode)
bind-key -T copy-mode-vi 'v' send -X begin-selection
# copy selected text to the system's clipboard
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# status bar personalizations
set -g status-bg '#1D1F21'
set -g status-fg '#C5C8C6'
set -g status-left " "
set -g status-right "#[bg=#282A2E] @glabrego | %H:%M "
set -g window-status-current-format '#[bold, bg=#282A2E, fg=#C5C8C6] #I/#W '
set -g window-status-format ' #I/#W '
